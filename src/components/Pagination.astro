---
const { currentPage, totalPages, prevUrl, nextUrl } = Astro.props;
const props = Astro.props;
const pages = Array.from({ length: totalPages }, (_, i) => i + 1);
---

<nav aria-label="Paginación del blog" class="pagination">
  <div class="pagination-container">
    {
      prevUrl && (
        <a
          href={prevUrl}
          class="pagination-link prev ad-shadow"
          aria-label="Página anterior"
        >
          <span class="pr">
              <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><!-- Icon from Tabler Icons by Paweł Kuna - https://github.com/tabler/tabler-icons/blob/master/LICENSE --><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="m12 8l-4 4l4 4m4-4H8"/><path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9-9 9s-9-1.8-9-9s1.8-9 9-9"/></g></svg>
          </span>
          Anterior
        </a>
      )
    }

    <div class="pagination-numbers">
      {
        pages.map((page) => (
          <a
            href={page === 1 ? "/blog" : `/blog/${page}`}
            class={`pagination-link number ${currentPage === page ? "active" : ""}`}
            aria-label={`Ir a la página ${page}`}
            aria-current={currentPage === page ? "page" : undefined}
          >
            {page}
          </a>
        ))
      }
    </div>

    {
      nextUrl && (
        <a
          href={nextUrl}
          class="pagination-link next rad-shadow"
          aria-label="Página siguiente"
        >
          Siguiente{" "}
          <span class="pl">
           <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><!-- Icon from Tabler Icons by Paweł Kuna - https://github.com/tabler/tabler-icons/blob/master/LICENSE --><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="m12 16l4-4l-4-4m-4 4h8"/><path d="M12 3c7.2 0 9 1.8 9 9s-1.8 9-9 9s-9-1.8-9-9s1.8-9 9-9"/></g></svg>
          </span>
        </a>
      )
    }
  </div>
</nav>

<style>
  .pagination {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }
  .pagination-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  .pagination-link {
    display: inline-flex;
    padding: 0.5rem 1rem;
    border-radius: var(--radius-3);
    text-decoration: none;
    color: var(--link);
    background-color: var(--surface-2);
    transition:
      background-color 0.3s ease,
      color 0.3s ease;
  }
  .pagination-link:hover,
  .pagination-link:focus {
    background-color: var(--surface-3);
    color: var(--text-1);
  }
  .pagination-link.active {
    background-color: var(--link);
    color: var(--surface-1);
  }
  .pagination-numbers {
    display: flex;
    gap: 0.25rem;
  }
  .pagination-link.prev,
  .pagination-link.next {
    font-weight: var(--font-weight-5);
  }
  @media (max-width: 600px) {
    .pagination-numbers {
      display: none;
    }
  }
</style>
